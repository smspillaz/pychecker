
* Fix spurious warnings (Base class __init__ not called)
* Make cfg calling self.func() where func is an attribute generates a warning
	(No method (func) found)
* Fix **kwArgs warning if named param is not first
* Fix Local variable (xxx) not used, when have:  except Error, xxx:
* Handle apply() like a function call, when possible
* Check function return values
* Make a .rc file to specify options (like on cmd line)
* Finer grain control of warnings/config options (per module/class/method)
* Check code in module scope (not in a function/method)
* Use real line numbers for import & class warnings
* Spell check doc strings
* Allow import checker to catch errors, rather than starting checker.py

