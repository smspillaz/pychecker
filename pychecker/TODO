
* Fix spurious warnings (Base class __init__ not called)
	known cases: subclass from Exception or
	             subclass from YYY where from XXX import YYYY
* Fix Local variable (xxx) not used, when have:  "%(xxx)s" % locals()
* Check format strings: "%s %d" % (strValue, intValue)
* Check function return values
* Finer grain control of warnings/config options (per module/class/method)
* Check code in module scope (not in a function/method)
* Use real line numbers for import & class warnings
* Spell check doc strings
* Allow import checker to catch errors, rather than starting checker.py

Eric's code review:

* insert rather than append '.' to sys.path???
* Fix (for i in list: if i in other_list: continue) by using filter func
	(need to fix warn.py:find()/blacklist)
* would it be simpler to treat self.f() as f(self)?
* warn.py: _addWarning can be removed by using list flattening?
* checker.py:  use one list for warnings (remove importWarnings)?
* Consider i18n for cfg strings, warnings, etc.
* use %(name)s expansion for warnings

